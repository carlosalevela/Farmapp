services: 
  webserver:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - user_api
    networks:
      - dev_network

  user_api:
    build:
      context: ./Apis
    deploy: 
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 256M
    ports:
      - "3000:3000"
    volumes:
      - ./Apis/usuario:/usr/userAPI
    networks:
      - dev_network

  producto:
    build:
      context: ./Apis  # Ajusta seg√∫n la estructura de carpetas
      dockerfile: Dockerfile.producto  # Referencia el Dockerfile de producto
    container_name: producto_container
    ports:
      - "3001:3000"  # Expone el puerto de producto
    volumes:
      - ./Apis/producto:/usr/productAPI
    depends_on:
      - postgres_producto  # Depende de la base de datos de productos
    networks:
      - dev_network
    
  inventario:
    build: 
      context: ./Apis
      dockerfile: Dockerfile.inventario
    container_name: invantario_container
    ports:
      - "3002:3000"
    volumes:
      - ./Apis/inventario:/usr/inventarioAPI
    depends_on:
      - postgres_inventario
    networks:
      - dev_network

  postgres_inventario:
    image: postgres:17
    container_name: inventario_db_dev
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 4GB
    ports:
      - "5434:5432"  # Mapea el puerto local 5434 al puerto interno 5432
    volumes:
      - ./inventario_data_dev:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 12345 
    networks:
      - dev_network



  postgres_producto:
    image: postgres:17
    container_name: producto_db_dev
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 4GB
        reservations:
          cpus: "0.1"
          memory: 1GB
    ports:
      - "5433:5432"  # Usamos un puerto diferente (5433) para evitar conflicto con la base de datos de usuario
    volumes:
      - ./producto_data_dev:/var/lib/postgresql/data  # Volumen para persistir los datos de productos
    environment:
      POSTGRES_PASSWORD: 12345
    networks:
      - dev_network

  postgres:
    image: postgres:17
    container_name: user_db_dev
    deploy:
      resources:
        limits: 
          cpus: "0.2"
          memory: 4GB 
        reservations:
          cpus: "0.1"
          memory: 1GB
    ports:
      - "5432:5432"
    volumes:
      - ./users_data_dev:/var/lib/postgresql/data
      - ./pg_logs:/var/log/postgresql
    environment:
      POSTGRES_PASSWORD: 12345
    networks:
      - dev_network

  pgadmin: 
    image: dpage/pgadmin4
    container_name: dev_pgadmin
    ports:
      - 8888:80
    environment:
      PGADMIN_DEFAULT_EMAIL: yeyi@yeyi.com
      PGADMIN_DEFAULT_PASSWORD: 12345
    networks:
      - dev_network

networks:
  dev_network:
    driver: bridge